version: "3.3"

networks:
  temp-project:
    external:
      name: temp-project

services:
  temp-project-composer:
    image: composer:latest
    working_dir: "/app"
    volumes:
      - ./app:/app
    command: "install --ignore-platform-reqs"
  temp-project-worker:
    build: "./docker/php7.3-cli-alpine-mysql"
    env_file:
      - .env
    volumes:
      - ./app:/app
    working_dir: "/app"
    entrypoint: ["php", "worker.php"]
    restart: on-failure
    depends_on:
      - temp-project-composer
      - temp-project-mysql
    networks:
      - temp-project
  temp-project-web-client:
    build: "./docker/php7.3-fpm-alpine-mysql"
    container_name: ${WEB_CLIENT_HOST}
    env_file:
      - .env
    volumes:
      - "./app:/var/www/html"
    working_dir: "/app"
    restart: on-failure
    depends_on:
      - temp-project-mysql
    networks:
      - temp-project
  temp-project-mysql:
    image: mysql:latest
    env_file:
      - .env
    container_name: ${MYSQL_HOST}
    command: --default-authentication-plugin=mysql_native_password
    restart: on-failure
#    ports:
#      - 33066:3306
    volumes:
      - ./data/db/mysql:/var/lib/mysql
      - /data/init/mysql:/docker-entrypoint-initdb.d/:ro
    networks:
      - temp-project
  temp-project-nginx:
    image: nginx:latest
    volumes:
      - "./docker/etc/nginx/default.conf:/etc/nginx/conf.d/default.template"
      - "./app:/var/www/html"
    ports:
      - "9882:80"
    environment:
      - NGINX_HOST=${NGINX_HOST}
      - WEB_CLIENT_HOST=${WEB_CLIENT_HOST}
    command: /bin/bash -c "envsubst '$$NGINX_HOST $$WEB_CLIENT_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    depends_on:
      - temp-project-web-client
    networks:
      - temp-project